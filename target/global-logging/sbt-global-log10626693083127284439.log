[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\MAKS\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\MAKS\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 11.0.4)
[debug]       Load.loadUnit: plugins took 88.7213ms
[debug]       Load.loadUnit: defsScala took 0.270899ms
[debug] [Loading] Scanning directory C:\Users\MAKS\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\MAKS\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.440001 ms
[debug]           Load.resolveProject(global-plugins) took 48.1169ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\MAKS\.sbt\1.0\plugins, plugins: List(<none>))) took 88.566199ms
[debug] [Loading] Done in C:\Users\MAKS\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 107.1124ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2284ms
[debug]     Load.loadUnit(file:/C:/Users/MAKS/.sbt/1.0/plugins/, ...) took 203.796099ms
[debug]   Load.apply: load took 369.8902ms
[debug]   Load.apply: resolveProjects took 7.5859ms
[debug]   Load.apply: finalTransforms took 73.856599ms
[debug]   Load.apply: config.delegates took 9.318399ms
[debug]   Load.apply: Def.make(settings)... took 574.1608ms
[debug]   Load.apply: structureIndex took 108.4735ms
[debug]   Load.apply: mkStreams took 1.627601ms
[info] loading global plugins from C:\Users\MAKS\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2819.409801ms
[debug]           Load.loadUnit: plugins took 37.0951ms
[debug]           Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory C:\Users\MAKS\Desktop\performance-testing-master\project
[debug]             Load.loadUnit: mkEval took 7.7538ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\MAKS\Desktop\performance-testing-master\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.1275 ms
[info] loading settings for project performance-testing-master-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(performance-testing-master-build) took 4.5643ms
[debug]             Load.loadTransitive: finalizeProject(Project(id performance-testing-master-build, base: C:\Users\MAKS\Desktop\performance-testing-master\project, plugins: List(<none>))) took 8.5696ms
[debug] [Loading] Done in C:\Users\MAKS\Desktop\performance-testing-master\project, returning: (performance-testing-master-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2363.005999ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.0784ms
[debug]         Load.loadUnit(file:/C:/Users/MAKS/Desktop/performance-testing-master/project/, ...) took 2408.457499ms
[debug]       Load.apply: load took 2410.081001ms
[debug]       Load.apply: resolveProjects took 0.131799ms
[debug]       Load.apply: finalTransforms took 8.6097ms
[debug]       Load.apply: config.delegates took 0.496ms
[debug]       Load.apply: Def.make(settings)... took 70.525299ms
[debug]       Load.apply: structureIndex took 25.437699ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from C:\Users\MAKS\Desktop\performance-testing-master\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4972.4537ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\MAKS\Desktop\performance-testing-master
[debug]       Load.loadUnit: mkEval took 0.2948ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\MAKS\Desktop\performance-testing-master, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(io.gatling.sbt.GatlingPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(io.gatling.sbt.GatlingPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,io.gatling.sbt.GatlingPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 22.2095 ms
[info] loading settings for project performance-testing-master from build.sbt ...
[debug]         Load.resolveProject(performance-testing-master) took 129.3117ms
[debug]       Load.loadTransitive: finalizeProject(Project(id performance-testing-master, base: C:\Users\MAKS\Desktop\performance-testing-master, plugins: List(<none>))) took 154.6276ms
[debug] [Loading] Done in C:\Users\MAKS\Desktop\performance-testing-master, returning: (performance-testing-master)
[debug]     Load.loadUnit: loadedProjectsRaw took 3585.857901ms
[debug]     Load.loadUnit: cleanEvalClasses took 41.2204ms
[debug]   Load.loadUnit(file:/C:/Users/MAKS/Desktop/performance-testing-master/, ...) took 8600.3942ms
[debug] Load.apply: load took 8607.5838ms
[debug] Load.apply: resolveProjects took 0.210699ms
[debug] Load.apply: finalTransforms took 64.9731ms
[debug] Load.apply: config.delegates took 1.1648ms
[debug] Load.apply: Def.make(settings)... took 169.056801ms
[debug] Load.apply: structureIndex took 61.196901ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to pt (in build file:/C:/Users/MAKS/Desktop/performance-testing-master/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64030 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64030, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to pt (in build file:/C:/Users/MAKS/Desktop/performance-testing-master/)
[debug] > Exec(idea-shell, None, None)
